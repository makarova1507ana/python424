'''
Дана пицца 16 кусочков. Доступны команды:
1. print(‘Взять кусок’)
2. print(‘съесть кусок’)
3. print(‘положить кусок обратно’)
написать программу, симулующую поедание кусочков пиццы,
в программе обязательно должно присутствовать команда №3 два раза.
Проверять условием, если пиццы в руках нет.
'''
'''
спрашиваем у пользователя  команду 
цикл пока есть кусочки пиццы:
    если есть пицца в руках:
    ...
    и т.д.     
'''




#—------------------------------- Задача —--------------------------------#
'''
Помогите Алексу собрать нужное количество монет для покупки подарка. 
В начале у Алекса нет монет. Каждый день он может найти случайное количество монет от 1 до 5.
Подарок стоит 50 монет. 
Программа должна симулировать процесс сбора монет до тех пор, пока у Алекса не окажется 
достаточно монет для покупки подарка, и сообщить, сколько дней это заняло.
'''
'''
Что дано?
* в начале денег нет
* стоимость подарка 50
* ежедневное кол-во момент

Что надо найти?
* кол-во дней, которое потребовалось

'''
#
# import random
# moneyAlex = 0 # * в начале денег нет
# price_gift = 50 # * стоимость подарка 50
# everyDayMoney = 0 # * ежедневное кол-во момент
# days = 0 # * кол-во дней,  которое потребовалось
#
# # ------ основное -------- #
# while moneyAlex < price_gift: # пока монет недостаточно для подарка
#     everyDayMoney = random.randint(1, 5) # узнаем случаеное кол-во монет
#     moneyAlex += everyDayMoney # добавить монеты к Алексу
#     days += 1 # увеличиваем
#     print(f'Сегодня у Алекса {moneyAlex} монет')
#
# # Ответ на вопрос задачи
# print(f'Для сбора монет на подарок потребовалось {days} дней')


#  -------------------- цикл for ----------------------- #
# цикл перебора коллекции (набор элементов)
'''
for переменная_куда_кладем_значение in коллекция: 
    действие
    ...

for color in 'black', 'red', 'pink', 'blue':
    print(color)
'''

# #—------------------------------- Задача —--------------------------------#
#
# # есть 5 грязных тарелок. (коллекция грязных тарелок)-> присвоим тарелкам номера
# # надо помыть и доложить о кол-во чистых тарелок на каждом этапе мытья
# clean_dish = 0
# for dish in 'грязная тарелка 1', 'грязная тарелка 2', 'грязная тарелка 3', 'грязная тарелка 4', 'грязная тарелка 5':
#     print('Моем тарелку', dish)
#     clean_dish += 1
# print(f'Все тарелки помыты {clean_dish}')



# #—------------------------------- Задача —--------------------------------#
# #  у нас есть  стоимости товаров, необходимо показать стоимость товара со скидкой 15%
#
# '''
# дано: 100, 1000, 10, 500, 50
# найти: для каждого стоимость со скидкой
# '''
# for price in 100, 1000, 10, 500, 50:
#     print(f'стоимость со скидкой: {price * 0.85}')

#—------------------------------- Задача —--------------------------------#
'''
Вы разрабатываете форму регистрации на сайте, которая требует, чтобы пользователь ввел число 
больше 18  в качестве возраста.
'''
'''
дано: возраст введнный пользователем
найти: Показать, что регистрация прошла успешно при введение 18 и больше 

'''
# user_age = int(input('Введите ваш возраст: '))
# while user_age < 18:
#     user_age = int(input('Введите ваш возраст: '))
#
# print("Регистрация прошла успешно")


# ----------------- break | continue  ------------------------- #
# break - прервать (остановить, прекратить)
# continue - продолжить == пропустить
# Итерация == повтор цикла == шаг цикла

# while True: # цикл будет работать всегда, пока не будет превран
#
#     age = int(input("Введите ваш возраст"))
#     if age >= 18:
#         print("Регистрация успешна")
#         break
#     else:
#         print("Нет доступа")


# #-----альтернативное решение без break-------#
# is_not_18 = True
# while is_not_18: # цикл будет работать всегда, пока не будет превран
#
#     age = int(input("Введите ваш возраст"))
#     if age >= 18:
#         print("Регистрация успешна")
#         is_not_18 = False
#     else:
#         print("Нет доступа")




#—------------------------------- Задача —--------------------------------#
# Дан диапазон от start до end. End и start могут быть перепутаны.
# и найти сумму всех чисел в указанном диапазоне
'''
дано:
start = 5
end = 8

найти:
сумма между start и end включительно
'''
# start = int(input('start = '))
# end = int(input('end = '))
# total_sum = start
# while True:
#     start += 1
#     total_sum += start
#     print(f'start - {start},  total_sum - {total_sum}')
#     if start == end:
#
#         break
#         #---после ничего не сможет испольнится--#
#
# #------после break будет работать блок ниже ↓ ------#
# print(f'total_sum = {total_sum}')




# # ------------------ range ------------------ #
# # range - диапозон и это отдельный тип данных
# d = range(0, 10) # от 0 включительно до 9 включительно
# print(d, type(d))
# for element in d:
#     print(element, type(element))

# # ------------------ альтернативное решение ------------------ #

'''
дано:
start = 5
end = 8

найти:
сумма между start и end включительно
'''
start = int(input('start = '))
end = int(input('end = '))
total_sum = 0

if start > end:
    start, end = end, start #  меняем местами

for num in range(start, end + 1): # end + 1 чтобы было включительно
    total_sum += num
    print(f'num - {num},  total_sum - {total_sum}')

print(f'total_sum = {total_sum}')




















# continue ПОСМОТРЕТЬ и range про третий параметр

