#—------------------------------- Задача —--------------------------------#
# Дана строка, состоящая из слов, разделенных пробелами.
# Определите, сколько в ней слов.

'''
пример

входные данные
"Привет, абвгд это я! Как у тебя дела?"

выходные данные

8 (в это число включены:
Привет,
абвгд
это
я!
Как
у
тебя
дела?)
'''
#
# test_string = "Привет, абвгд это я! Как у тебя дела?"
# words = test_string.split()
# print(len(words))

#—------------------------------- Задача —--------------------------------#
# Дана строка, состоящая из слов.
# Определите, сколько в ней встречается словосочетние (подстрока) "еда".
'''
входные данные
"Ого, это же еда! Вот такая была славная победа!"

выходные данные
2

входные данные
"Ого, это же EДА! Вот такая была славная победа!"

выходные данные
2
'''
'''
test_string = "Ого, это же ЕДА! Вот такая была славная победа!"
test_string = test_string.lower()
print(test_string)
print(test_string.count('еда'))

'''


#----------------------- Регулярные выражения ----------------------#
'''
Регулярные выражения (regular expressions) -  
это такой специальный шаблон для поиска подстрок


https://regex101.com/ 

пример регулярного выражения
( |^)[Ее][Дд][АаЫыуУ] - пример ищем слово еда в разных его формах 
( |^) - или пробел или начало строки
[Ее] - Или Е или е
[Дд] - Или Д или д
[АаЫыуУ] - Или А или а или Ы или ы и т.д.
'''



#—------------------------------- Задача —--------------------------------#
# Дана строка, состоящая из слов.
# Определите, сколько в ней встречается словосочетние (подстрока) "еда".
'''
входные данные
"Ого, это же еда! Вот такая была славная победа!"

выходные данные
2

входные данные
"Ого, это же EДА! Вот такая была славная победа!"

выходные данные
2
'''
import re # regular expressions

test_string = '''
еда Ого, это же ЕДА! Вот такая была славная победа! нет еды, дам Еду
 eдa (на латиницы написаны e a)
 еда
'''
pattern_regex = r"\b[Ее][Дд][АаЫыуУ]\b"
print(f'''
все совпадения найденные: {re.findall(pattern_regex, test_string)}
Кол-во найденных  совпадений: {len(re.findall(pattern_regex, test_string))}''')